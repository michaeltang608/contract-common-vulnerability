const {
  time,
  loadFixture,
} = require("@nomicfoundation/hardhat-network-helpers");
const { anyValue } = require("@nomicfoundation/hardhat-chai-matchers/withArgs");
const { expect } = require("chai");
const { ethers } = require("hardhat");
const addrutil = require("../utils/addrutil");


describe("未知ether", function () {
  async function deploy_normal() {
    //actual deployed addr
    const Contract = await ethers.getContractFactory("GrameOnEther");
    const contract = await Contract.deploy();
    console.log(`部署后合约余额: 
    ${ethers.utils.formatEther(await ethers.provider.getBalance(contract.address))}`)
    return { contract }
  }
  describe('testAll', function () {
    it('正常情况下测试', async () => {
      const { contract } = await loadFixture(deploy_normal)
      const [firstSigner, secondSigner] = await ethers.getSigners();

      const tx1 = await contract.play({ value: ethers.utils.parseEther("0.5") })
      console.log(`第一个玩家后，合约以太余额: 
      ${ethers.utils.formatEther(await ethers.provider.getBalance(contract.address))}`)
      const result1 = await tx1.wait()
      console.log(result1.events[0].args)

      const tx2 = await contract.connect(secondSigner).play({ value: ethers.utils.parseEther("0.5") })
      const result2 = await tx2.wait()
      console.log(`第二个玩家后，合约以太余额: 
      ${ethers.utils.formatEther(await ethers.provider.getBalance(contract.address))}`)
      console.log(result2.events[0].args)

      //获胜者是第二个玩家
      console.log(`获胜者是第二个玩家吗？: ${await contract.winner() === secondSigner.address}`)
      
    );
  })
});

